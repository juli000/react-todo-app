{"ast":null,"code":"import _toConsumableArray from\"/Users/juliolopez/Desktop/Projects/react-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/juliolopez/Desktop/Projects/react-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TodoForm from'./TodoForm';import Todo from'./Todo';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){if(!todo.text||/^\\s*$/.test(todo.text)){return;}var newTodos=[todo].concat(_toConsumableArray(todos));setTodos(newTodos);};var removeTodo=function removeTodo(id){var removeArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removeArr);};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var completeTodo=function completeTodo(id){var updatedTodos=todos.map(function(todo){if(todo.id==id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updatedTodos);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"What's the Plan for Today?\"}),/*#__PURE__*/_jsx(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/_jsx(Todo,{todos:todos,completeTodo:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo})]});}export default TodoList;","map":{"version":3,"sources":["/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","removeTodo","id","removeArr","filter","updateTodo","todoId","newValue","prev","map","item","completeTodo","updatedTodos","isComplete"],"mappings":"wVAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAChB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CACpB,GAAG,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,CAA0C,CACtC,OACH,CAED,GAAME,CAAAA,QAAQ,EAAIH,IAAJ,4BAAaH,KAAb,EAAd,CAEAC,QAAQ,CAACK,QAAD,CAAR,CACH,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,CAAI,CACrB,GAAMC,CAAAA,SAAS,CAAG,mBAAIT,KAAJ,EAAWU,MAAX,CAAkB,SAAAP,IAAI,QAAIA,CAAAA,IAAI,CAACK,EAAL,GAAYA,EAAhB,EAAtB,CAAlB,CAEAP,QAAQ,CAACQ,SAAD,CAAR,CACH,CAJD,CAMA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,QAAT,CAAsB,CACrC,GAAG,CAACA,QAAQ,CAACT,IAAV,EAAkB,QAAQC,IAAR,CAAaQ,QAAQ,CAACT,IAAtB,CAArB,CAAkD,CAC9C,OACH,CAEDH,QAAQ,CAAC,SAAAa,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAGA,CAAAA,IAAI,CAACR,EAAL,GAAYI,MAAZ,CAAqBC,QAArB,CAAgCG,IAAnC,EAAb,CAAJ,EAAL,CAAR,CAEH,CAPD,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAT,EAAE,CAAI,CACvB,GAAIU,CAAAA,YAAY,CAAGlB,KAAK,CAACe,GAAN,CAAU,SAAAZ,IAAI,CAAI,CACjC,GAAGA,IAAI,CAACK,EAAL,EAAWA,EAAd,CAAiB,CACbL,IAAI,CAACgB,UAAL,CAAkB,CAAChB,IAAI,CAACgB,UAAxB,CACH,CACD,MAAOhB,CAAAA,IAAP,CACH,CALkB,CAAnB,CAMAF,QAAQ,CAACiB,YAAD,CAAR,CACH,CARD,CAUA,mBACI,oCACI,kDADJ,cAEI,KAAC,QAAD,EAAW,QAAQ,CAAEhB,OAArB,EAFJ,cAGI,KAAC,IAAD,EAAM,KAAK,CAAIF,KAAf,CAAsB,YAAY,CAAIiB,YAAtC,CAAoD,UAAU,CAAEV,UAAhE,CAA4E,UAAU,CAAEI,UAAxF,EAHJ,GADJ,CAOH,CAED,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item=>(item.id === todoId ? newValue : item))\n        );\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if(todo.id == id){\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    return (\n        <div>\n            <h1>What's the Plan for Today?</h1>\n            <TodoForm  onSubmit={addTodo} />\n            <Todo todos = {todos} completeTodo = {completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\n        </div>\n    );\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}