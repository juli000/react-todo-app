{"ast":null,"code":"var _jsxFileName = \"/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const inputRed = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \" Add todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TodoForm, \"FLlJi+esahsVpTPI/0GALiyTyTI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","inputRed","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMO,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACCD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAID,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADO;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWA,sBACQ;AAAM,IAAA,SAAS,EAAG,WAAlB;AAA8B,IAAA,QAAQ,EAAES,YAAxC;AAAA,4BACI;AACA,MAAA,IAAI,EAAE,MADN;AAEA,MAAA,WAAW,EAAC,YAFZ;AAGA,MAAA,KAAK,EAAEV,KAHP;AAIA,MAAA,IAAI,EAAG,MAJP;AAKA,MAAA,SAAS,EAAG,YALZ;AAMA,MAAA,QAAQ,EAAIM,YANZ;AAOA,MAAA,GAAG,EAAEH;AAPL;AAAA;AAAA;AAAA;AAAA,YADJ,eAUA;AAAQ,MAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAcC;;GArCIL,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] =  useState('');\n\n    const inputRed = useRef(null)\n     useEffect(() => {\n         inputRef.current.focus()\n     });\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random()*10000),\n            text: input\n        });\n\n        setInput('');\n    };\n        \n    return (\n            <form className = \"todo-form\" onSubmit={handleSubmit}>\n                <input \n                type= 'text' \n                placeholder='Add a todo' \n                value={input} \n                name = 'text' \n                className = 'todo-input'\n                onChange = {handleChange}\n                ref={inputRef}\n            />\n            <button className = 'todo-button'> Add todo </button>\n            </form> \n        );\n    }\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}