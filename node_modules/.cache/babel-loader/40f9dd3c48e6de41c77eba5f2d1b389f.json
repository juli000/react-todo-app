{"ast":null,"code":"var _jsxFileName = \"/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { RiEdit2Fill } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row-complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classNAme: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(MdDeleteForever, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RiEdit2Fill, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/Todo.js"],"names":["React","useState","TodoForm","TodoList","MdDeleteForever","RiEdit2Fill","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;;AAEA,SAASC,IAAT,OAA6D;AAAA;;AAAA,MAA/C;AAACC,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,GAA+C;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC7BY,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAGH,IAAI,CAACE,EAAR,EAAW;AACP,wBAAM,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAN;AACH;;AAGD,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AACI,IAAA,SAAS,EAAID,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAuC,UADxD;AAAA,4BAII;AAAqB,MAAA,OAAO,EAAG,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAAjD;AAAA,gBACKI,IAAI,CAACG;AADV,OAAYH,IAAI,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA,8BACI,QAAC,eAAD;AACA,QAAA,OAAO,EAAG,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAD1B;AAEA,QAAA,SAAS,EAAG;AAFZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,WAAD;AACA,QAAA,OAAO,EAAG,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAV;AAAcC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAA1B,SAAD,CADvB;AAEA,QAAA,SAAS,EAAG;AAFZ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAEWF,KAFX;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAmBH;;GAtCQZ,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport {MdDeleteForever} from 'react-icons/md'\nimport {RiEdit2Fill} from 'react-icons/ri'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if(edit.id){\n        return<TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n\n    return todos.map((todo, index) => (\n        <div\n            className = {todo.isComplete ? 'todo-row-complete' :'todo-row'}\n            key = {index}\n        >\n            <div key = {todo.id} onClick= {() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div classNAme = \"icons\">\n                <MdDeleteForever \n                onClick= {() => removeTodo(todo.id)}        \n                className = 'delete-icon'        \n                />\n                <RiEdit2Fill \n                onClick= {() => setEdit({id: todo.id, value: todo.text})}        \n                className = 'edit-icon'  />\n            </div>\n        </div>\n    ));\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}