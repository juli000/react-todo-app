{"ast":null,"code":"import _slicedToArray from\"/Users/juliolopez/Desktop/Projects/react-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});var handleChange=function handleChange(e){setInput(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();props.onSubmit({id:Math.floor(Math.random()*1000000),text:input});setInput('');};return/*#__PURE__*/_jsx(\"form\",{className:\"todo-form\",onSubmit:handleSubmit,children:props.edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Update your item\",value:input,name:\"text\",className:\"todo-input edit\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button edit\",children:\" Update \"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a todo\",value:input,name:\"text\",className:\"todo-input\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button\",children:\" Add todo \"})]})});}export default TodoForm;","map":{"version":3,"sources":["/Users/juliolopez/Desktop/Projects/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,KAAiD,OAAjD,C,6IAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB,cAA2BJ,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,CAAgC,EAAjC,CAAnC,wCAAOC,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAAC,IAAD,CAAvB,CACAD,SAAS,CAAC,UAAM,CACZQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACH,CAFQ,CAAT,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR,CACH,CAFD,CAIA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,CAAC,CAAI,CACtBA,CAAC,CAACG,cAAF,GAEAZ,KAAK,CAACa,QAAN,CAAe,CACXC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAc,OAAzB,CADO,CAEXC,IAAI,CAAEf,KAFK,CAAf,EAKAC,QAAQ,CAAC,EAAD,CAAR,CACH,CATD,CAWA,mBACQ,aAAM,SAAS,CAAG,WAAlB,CAA8B,QAAQ,CAAEO,YAAxC,UACKX,KAAK,CAACC,IAAN,cACD,wCACA,cACA,IAAI,CAAE,MADN,CAEA,WAAW,CAAC,kBAFZ,CAGA,KAAK,CAAEE,KAHP,CAIA,IAAI,CAAG,MAJP,CAKA,SAAS,CAAG,iBALZ,CAMA,QAAQ,CAAIK,YANZ,CAOA,GAAG,CAAEH,QAPL,EADA,cAUJ,eAAQ,SAAS,CAAG,kBAApB,sBAVI,GADC,cAeL,wCACA,cACA,IAAI,CAAE,MADN,CAEA,WAAW,CAAC,YAFZ,CAGA,KAAK,CAAEF,KAHP,CAIA,IAAI,CAAG,MAJP,CAKA,SAAS,CAAG,YALZ,CAMA,QAAQ,CAAIK,YANZ,CAOA,GAAG,CAAEH,QAPL,EADA,cAUJ,eAAQ,SAAS,CAAG,aAApB,wBAVI,GAhBA,EADR,CAiCC,CAEL,cAAeN,CAAAA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] =  useState(props.edit ? props.edit.value : '');\n\n    const inputRef = useRef(null)\n    useEffect(() => {\n        inputRef.current.focus()\n    });\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random()*1000000),\n            text: input\n        });\n\n        setInput('');\n    };\n        \n    return (\n            <form className = 'todo-form' onSubmit={handleSubmit}>\n                {props.edit ? ( \n                <>\n                <input \n                type= 'text' \n                placeholder='Update your item' \n                value={input} \n                name = 'text' \n                className = 'todo-input edit'\n                onChange = {handleChange}\n                ref={inputRef}\n            />\n            <button className = 'todo-button edit'> Update </button>\n            </>\n            ) : \n            (\n            <>\n            <input \n            type= 'text' \n            placeholder='Add a todo' \n            value={input} \n            name = 'text' \n            className = 'todo-input'\n            onChange = {handleChange}\n            ref={inputRef}\n        />\n        <button className = 'todo-button'> Add todo </button>\n        </>\n            )}\n                \n            </form> \n        );\n    }\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}